{
  "api": {
    "name": "TruvideoSdkVideoPlugin",
    "slug": "truvideosdkvideoplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "echo",
        "signature": "(options: { value: string; }) => Promise<{ value: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "Promise<{ value: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "echo"
      },
      {
        "name": "concatVideos",
        "signature": "(options: { videoUris: string; resultPath: string; }) => Promise<{ result: object; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ videoUris: string; resultPath: string; }"
          }
        ],
        "returns": "Promise<{ result: object; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "concatvideos"
      },
      {
        "name": "encodeVideo",
        "signature": "(options: { videoUri: string; resultPath: string; config: string; }) => Promise<{ result: object; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ videoUri: string; resultPath: string; config: string; }"
          }
        ],
        "returns": "Promise<{ result: object; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "encodevideo"
      },
      {
        "name": "getVideoInfo",
        "signature": "(options: { videoPath: string; }) => Promise<{ result: object; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ videoPath: string; }"
          }
        ],
        "returns": "Promise<{ result: object; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getvideoinfo"
      },
      {
        "name": "compareVideos",
        "signature": "(options: { videoUris: string; }) => Promise<{ result: object; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ videoUris: string; }"
          }
        ],
        "returns": "Promise<{ result: object; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "comparevideos"
      },
      {
        "name": "mergeVideos",
        "signature": "(options: { videoUris: string; resultPath: string; config: string; }) => Promise<{ result: object; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ videoUris: string; resultPath: string; config: string; }"
          }
        ],
        "returns": "Promise<{ result: object; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "mergevideos"
      },
      {
        "name": "cleanNoise",
        "signature": "(options: { videoPath: string; resultPath: string; }) => Promise<{ result: object; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ videoPath: string; resultPath: string; }"
          }
        ],
        "returns": "Promise<{ result: object; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "cleannoise"
      },
      {
        "name": "editVideo",
        "signature": "(options: { videoPath: string; resultPath: string; config: string; }) => Promise<{ result: object; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ videoPath: string; resultPath: string; config: string; }"
          }
        ],
        "returns": "Promise<{ result: object; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "editvideo"
      },
      {
        "name": "generateThumbnail",
        "signature": "(options: { videoPath: string; resultPath: string; config: string; position: number; width: number; height: number; precise: boolean; }) => Promise<{ result: object; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ videoPath: string; resultPath: string; config: string; position: number; width: number; height: number; precise: boolean; }"
          }
        ],
        "returns": "Promise<{ result: object; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "generatethumbnail"
      },
      {
        "name": "getResultPath",
        "signature": "(options: { path: string; }) => Promise<{ resultPath: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ path: string; }"
          }
        ],
        "returns": "Promise<{ resultPath: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getresultpath"
      }
    ],
    "properties": []
  },
  "interfaces": [],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}