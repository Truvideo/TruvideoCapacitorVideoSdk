{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { registerPlugin } from '@capacitor/core';\n\nimport type { TruvideoSdkVideoPlugin } from './definitions';\n\nconst TruvideoSdkVideo = registerPlugin<TruvideoSdkVideoPlugin>('TruvideoSdkVideo');\n\nexport function getVideoInfo(videoPath: string): Promise<{ result: object }> {\n    return TruvideoSdkVideo.getVideoInfo({ videoPath });\n}\nexport function compareVideos(videoPath: string): Promise<{ result: object }> {\n    return TruvideoSdkVideo.compareVideos({ videoUris: videoPath });\n}\n\nexport function cleanNoise(\n    videoUri: string,\n    resultPath: string\n): Promise<{ result: object }> {\n    return TruvideoSdkVideo.cleanNoise({ videoPath: videoUri, resultPath: resultPath });\n}\n\nexport function editVideo(\n    videoUri: string,\n    resultPath: string\n): Promise<{ result: object }> {\n    return TruvideoSdkVideo.editVideo({ videoPath: videoUri, resultPath: resultPath });\n}\nexport function getResultPath(videoPath: string): Promise<{ result: string }> {\n    return TruvideoSdkVideo.getResultPath({ path: videoPath });\n}\n\nexport function generateThumbnail(\n    videoPath: string,\n    resultPath: string,\n    position: number,\n    width: number,\n    height: number,\n    precise: boolean\n): Promise<{ result: object }> {\n    return TruvideoSdkVideo.generateThumbnail({\n        videoPath: videoPath,\n        resultPath: resultPath,\n        position: position,\n        width: width,\n        height: height,\n        precise: precise\n    });\n}\n\nexport enum FrameRate {\n    twentyFourFps = 'twentyFourFps',\n    twentyFiveFps = 'twentyFiveFps',\n    thirtyFps = 'thirtyFps',\n    fiftyFps = 'fiftyFps',\n    sixtyFps = 'sixtyFps',\n}\n\nexport interface BuilderResponse {\n    id: string;\n    createdAt: string;\n    status: string;\n    type: string;\n    updatedAt: string;\n}\n\nexport class MergeBuilder {\n    private _filePath: string;\n    private resultPath: string;\n    private height: string = '';\n    private width: string = '';\n    private frameRate: string = '';\n    private mergeData: BuilderResponse | undefined;\n\n    constructor(filePaths: string, resultPath: string) {\n        if (!filePaths) {\n            throw new Error('filePath is required for MediaBuilder.');\n        }\n        if (!resultPath) {\n            throw new Error('resultPath is required for MediaBuilder.');\n        }\n        this._filePath = filePaths;\n        this.resultPath = resultPath;\n    }\n\n    setHeight(height: number): MergeBuilder {\n        this.height = '' + height;\n        return this;\n    }\n\n    setWidth(width: number): MergeBuilder {\n        this.width = '' + width;\n        return this;\n    }\n\n    setFrameRate(frameRate: FrameRate): MergeBuilder {\n        if (frameRate == FrameRate.fiftyFps) {\n            this.frameRate = 'fiftyFps';\n        } else if (frameRate == FrameRate.sixtyFps) {\n            this.frameRate = 'sixtyFps';\n        } else if (frameRate == FrameRate.twentyFourFps) {\n            this.frameRate = 'twentyFourFps';\n        } else if (frameRate == FrameRate.twentyFiveFps) {\n            this.frameRate = 'twentyFiveFps';\n        } else if (frameRate == FrameRate.thirtyFps) {\n            this.frameRate = 'thirtyFps';\n        } else {\n            this.frameRate = 'fiftyFps';\n        }\n        return this;\n    }\n\n    async build(): Promise<MergeBuilder> {\n        const config = {\n            height: this.height,\n            width: this.width,\n            framesRate: this.frameRate,\n        };\n\n        console.log(\"📦 [Build] Merging Videos with Config:\", config);\n        console.log(\"📦 [Build] Result Path:\", this.resultPath);\n        console.log(\"📦 [Build] Video URIs:\", this._filePath);\n\n        const response = await TruvideoSdkVideo.mergeVideos({\n            videoUris: this._filePath,\n            resultPath: this.resultPath,\n            config: JSON.stringify(config),\n        });\n\n        console.log(\"📥 [Build] mergeVideos API Raw Response:\", response);\n\n        try {\n            const result = typeof response.result === 'string'\n                ? JSON.parse(response.result)\n                : response.result;\n\n            if (!result || typeof result !== 'object') {\n                throw new Error('❌ processVideo returned invalid result.');\n            }\n\n            this.mergeData = result as BuilderResponse;\n            console.log(\"✅ [Process] Video processing complete. Processed Data:\", this.mergeData);\n            return this;\n        } catch (e) {\n            console.error(\"❌ [Process] Failed to parse resultPath JSON:\", response.result, e);\n            throw new Error('❌ Failed to parse resultPath from processVideo.');\n        }\n    }\n\n    async process(): Promise<BuilderResponse> {\n        if (!this.mergeData?.id) {\n            console.error(\"❌ [Process] Missing mergeData.id. Ensure build() was called successfully.\");\n            throw new Error('⚠️ Call build() and ensure it succeeds before calling process().');\n        }\n\n        const response = await TruvideoSdkVideo.processVideo({\n            path: this.mergeData.id\n        });\n\n\n        if (!response || !response.result) {\n            console.error(\"❌ [Process] Invalid response from processVideo. Missing resultPath.\");\n            throw new Error('❌ processVideo did not return a valid resultPath.');\n        }\n\n        try {\n            this.mergeData = JSON.parse(response.result) as BuilderResponse;\n        } catch (e) {\n            console.error(\"❌ [Process] Failed to parse resultPath JSON:\", response.result, e);\n            throw new Error('❌ Failed to parse resultPath from processVideo.');\n        }\n\n        console.log(\"✅ [Process] Video processing complete. Processed Data:\", this.mergeData);\n\n        return this.mergeData;\n    }\n\n\n    async cancel(): Promise<BuilderResponse> {\n        if (!this.mergeData?.id) {\n            throw new Error(\n                'Call build() and ensure it succeeds before calling cancel().'\n            );\n        }\n        var response = await TruvideoSdkVideo.cancelVideo(\n            { path: this.mergeData.id }\n        );\n\n        if (!response || !response.result) {\n            throw new Error('❌ cancelVideo did not return a valid resultPath.');\n        }\n\n        this.mergeData = JSON.parse(response.result) as BuilderResponse;\n        return this.mergeData;\n    }\n}\n\nexport class ConcatBuilder {\n    private _filePath: string;\n    private resultPath: string;\n    private concatData: BuilderResponse | undefined;\n\n    constructor(filePaths: string, resultPath: string) {\n        if (!filePaths) {\n            throw new Error('filePath is required for ConcatBuilder.');\n        }\n        if (!resultPath) {\n            throw new Error('resultPath is required for ConcatBuilder.');\n        }\n        this._filePath = filePaths;\n        this.resultPath = resultPath;\n    }\n\n    async build(): Promise<ConcatBuilder> {\n        const response = await TruvideoSdkVideo.concatVideos({\n            videoUris: this._filePath,\n            resultPath: this.resultPath\n        });\n\n        if (!response || typeof response !== 'object') {\n            throw new Error(\"Build failed: concatVideos response is not an object\");\n        }\n\n        if (!response.result || typeof response.result !== 'object') {\n            throw new Error(\"Build failed: response.result is not valid\");\n        }\n\n        this.concatData = response.result as BuilderResponse;\n        return this;\n    }\n\n    async process(): Promise<BuilderResponse> {\n        if (!this.concatData?.id) {\n            throw new Error('concatData.id is undefined. Call build() first.');\n        }\n\n        const response = await TruvideoSdkVideo.processVideo({\n            path: this.concatData.id\n        });\n\n        if (!response || typeof response !== 'object') {\n            throw new Error(\"Process failed: response is not an object\");\n        }\n\n        if (!response.result || typeof response.result !== 'string') {\n            throw new Error(\"Process failed: response.result is not a valid string\");\n        }\n\n        this.concatData = JSON.parse(response.result) as BuilderResponse;\n        return this.concatData;\n    }\n\n    async cancel(): Promise<BuilderResponse> {\n        if (!this.concatData?.id) {\n            throw new Error('concatData.id is undefined. Call build() first.');\n        }\n\n        const response = await TruvideoSdkVideo.cancelVideo({\n            path: this.concatData.id\n        });\n\n        if (!response || typeof response !== 'object') {\n            throw new Error(\"Cancel failed: response is not an object\");\n        }\n\n        if (!response.result || typeof response.result !== 'string') {\n            throw new Error(\"Cancel failed: response.result is not a valid string\");\n        }\n\n        this.concatData = JSON.parse(response.result) as BuilderResponse;\n        return this.concatData;\n    }\n\n}\n\nexport class EncodeBuilder {\n    private filePath: string;\n    private resultPath: string;\n    private height = '';\n    private width = '';\n    private frameRate = '';\n    private mergeData?: BuilderResponse;\n\n    constructor(filePath: string, resultPath: string) {\n        if (!filePath) throw new Error('filePath is required for EncodeBuilder.');\n        if (!resultPath) throw new Error('resultPath is required for EncodeBuilder.');\n        this.filePath = filePath;\n        this.resultPath = resultPath;\n    }\n\n    setHeight(height: number): EncodeBuilder {\n        this.height = height.toString();\n        return this;\n    }\n\n    setWidth(width: number): EncodeBuilder {\n        this.width = width.toString();\n        return this;\n    }\n\n    setFrameRate(frameRate: FrameRate): EncodeBuilder {\n        // Map enum to valid frame rate string\n        switch (frameRate) {\n            case FrameRate.fiftyFps:\n                this.frameRate = 'fiftyFps';\n                break;\n            case FrameRate.sixtyFps:\n                this.frameRate = 'sixtyFps';\n                break;\n            case FrameRate.twentyFourFps:\n                this.frameRate = 'twentyFourFps';\n                break;\n            case FrameRate.twentyFiveFps:\n                this.frameRate = 'twentyFiveFps';\n                break;\n            case FrameRate.thirtyFps:\n                this.frameRate = 'thirtyFps';\n                break;\n            default:\n                this.frameRate = 'fiftyFps';\n        }\n        return this;\n    }\n\n    // Builds the video using encodeVideo method\n    async build(): Promise<EncodeBuilder> {\n        const config = {\n            height: this.height,\n            width: this.width,\n            framesRate: this.frameRate,\n        };\n\n        const response = await TruvideoSdkVideo.encodeVideo({\n            videoUri: this.filePath,\n            resultPath: this.resultPath,\n            config: JSON.stringify(config)\n        });\n\n        if (!response || typeof response !== 'object') {\n            console.error(\"❌ Invalid response from encodeVideo:\", response);\n            throw new Error(\"Build failed: encodeVideo response is not an object\");\n        }\n\n        if (!response.result || typeof response.result !== 'object') {\n            console.error(\"❌ Invalid result in encodeVideo response:\", response.result);\n            throw new Error(\"Build failed: response.result is not valid\");\n        }\n\n        this.mergeData = response.result as BuilderResponse;\n        return this;\n    }\n\n    // Process the video after build\n    async process(): Promise<BuilderResponse> {\n        if (!this.mergeData?.id) {\n            throw new Error('Call build() and ensure it succeeds before calling process().');\n        }\n\n        const response = await TruvideoSdkVideo.processVideo({ path: this.mergeData.id });\n        this.mergeData = JSON.parse(response.result) as BuilderResponse;\n        return this.mergeData;\n    }\n\n    // Cancel the video encoding\n    async cancel(): Promise<BuilderResponse> {\n        if (!this.mergeData?.id) {\n            throw new Error('Call build() and ensure it succeeds before calling cancel().');\n        }\n\n        const response = await TruvideoSdkVideo.cancelVideo({ path: this.mergeData.id });\n        this.mergeData = JSON.parse(response.result) as BuilderResponse;\n        return this.mergeData;\n    }\n}\n"]}