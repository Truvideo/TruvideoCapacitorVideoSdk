{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface TruvideoSdkVideoPlugin {\n    echo(options: {\n        value: string\n    }): Promise<{ value: string }>;\n\n    concatVideos(options: {\n        videoUris: string;\n        resultPath: string\n    }): Promise<{ result: string }>;\n\n    encodeVideo(options: {\n        videoUri: string;\n        resultPath: string;\n        config: string;\n    }): Promise<{ result: object }>;\n\n    getVideoInfo(options: {\n        videoPath: string;\n    }): Promise<{ result: object }>;\n\n    compareVideos(options: {\n        videoUris: string;\n    }): Promise<{ result: object }>;\n\n    mergeVideos(options: {\n        videoUris: string;\n        resultPath: string;\n        config: string;\n    }): Promise<{ result: object }>;\n\n    cleanNoise(options: {\n        videoPath: string;\n        resultPath: string;\n    }): Promise<{ result: object }>;\n\n    editVideo(options: {\n        videoPath: string;\n        resultPath: string;\n    }): Promise<{ result: object }>;\n\n    generateThumbnail(options: {\n        videoPath: string;\n        resultPath: string;\n        position: number;\n        width: number;\n        height: number;\n        precise: boolean;\n    }): Promise<{ result: object }>;\n\n    getResultPath(options: {\n        path: string\n    }): Promise<{ result: string }>;\n\n    getRequestById(options: {\n        path: string\n    }): Promise<{ result: string }>;\n\n    processVideo(options: {\n        path: string\n    }): Promise<{ result: string }>;\n\n    cancelVideo(options: {\n        path: string\n    }): Promise<{ result: string }>;\n\n}\n"]}